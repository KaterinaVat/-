#include <iostream>
#include <cmath>
#include <geom/geom.hpp>

bool isCaught(RDec2D &mouse,RDec2D &cat, double rad) {
    return norma(mouse - cat) <= rad;
}

int main() {
    RDec2D r_c{10, -1};
    RDec2D r_m{-5, -20};

    double v0 = 6;
    RDec2D v_c = (r_m - r_c) * (1 / norma(r_m - r_c)) * v0;
    RDec2D v_m{0, -5};

    const double rad= 1e-5;
    double last = norma(r_m - r_c);

    double dt = 1e-6;
    double Time = 0;
    bool difference = std::sin(toPol(r_m - RDec2D{1, 0}).phi) < 0;
    while (r_m.y < 0 && !isCaught(r_m, r_c, rad)) {
        if (difference) {
            last = norma(r_m - r_c);
        }
        v_c = (r_m - r_c) * (1 / norma(r_m - r_c)) * v0;
        r_c = r_c + v_c * dt;
        r_m = r_m + v_m * dt;
        Time += dt;
        if (difference && last < norma(r_m - r_c)) {
            break;
        }
    }

    if (r_m.y >= 0) {
        std::cout << "Mouse is survived in " << countTime << "\n";
        std::cout << r_c;
        std::cout << r_m;
    } else if (isCaught(r_m, r_c, rad)) {
        std::cout << "Catch in " << Time << "\n";
        std::cout << "Cat: " << r_c;
        std::cout << "Mouse: " << r_m;
    } else if (difference && last < norma(r_m - r_c)) {
        std::cout << last << " " << norma(r_m - r_c) << "\n";
        std::cout << v_c << v_m;
        std::cout << "Mouse run away in " << Time << "\n";
    }
}
